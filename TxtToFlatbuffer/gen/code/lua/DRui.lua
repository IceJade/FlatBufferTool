-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Table

local flatbuffers = require('flatbuffers')

local DRui = {} -- the module
local DRui_mt = {} -- the class metatable

function DRui.New()
    local o = {}
    setmetatable(o, {__index = DRui_mt})
    return o
end
function DRui.GetRootAsDRui(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = DRui.New()
    o:Init(buf, n + offset)
    return o
end
function DRui_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function DRui_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRui_mt:AssetName()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRui_mt:UIGroupName()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRui_mt:Priority()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRui_mt:IsPauseCoveredUI()
    local o = self.view:Offset(12)
    if o ~= 0 then
        return (self.view:Get(flatbuffers.N.Bool, o + self.view.pos) ~= 0)
    end
    return false
end
function DRui_mt:IsMultipleInstance()
    local o = self.view:Offset(14)
    if o ~= 0 then
        return (self.view:Get(flatbuffers.N.Bool, o + self.view.pos) ~= 0)
    end
    return false
end
function DRui_mt:IsLocked()
    local o = self.view:Offset(16)
    if o ~= 0 then
        return (self.view:Get(flatbuffers.N.Bool, o + self.view.pos) ~= 0)
    end
    return false
end
function DRui_mt:IsRefreshPositionWhenOpen()
    local o = self.view:Offset(18)
    if o ~= 0 then
        return (self.view:Get(flatbuffers.N.Bool, o + self.view.pos) ~= 0)
    end
    return false
end
function DRui.Start(builder) builder:StartObject(8) end
function DRui.AddId(builder, id) builder:PrependUOffsetTRelativeSlot(0, id, 0) end
function DRui.AddAssetName(builder, AssetName) builder:PrependUOffsetTRelativeSlot(1, AssetName, 0) end
function DRui.AddUIGroupName(builder, UIGroupName) builder:PrependUOffsetTRelativeSlot(2, UIGroupName, 0) end
function DRui.AddPriority(builder, Priority) builder:PrependInt32Slot(3, Priority, 0) end
function DRui.AddIsPauseCoveredUI(builder, IsPauseCoveredUI) builder:PrependBoolSlot(4, IsPauseCoveredUI, 0) end
function DRui.AddIsMultipleInstance(builder, IsMultipleInstance) builder:PrependBoolSlot(5, IsMultipleInstance, 0) end
function DRui.AddIsLocked(builder, IsLocked) builder:PrependBoolSlot(6, IsLocked, 0) end
function DRui.AddIsRefreshPositionWhenOpen(builder, IsRefreshPositionWhenOpen) builder:PrependBoolSlot(7, IsRefreshPositionWhenOpen, 0) end
function DRui.End(builder) return builder:EndObject() end

return DRui -- return the module