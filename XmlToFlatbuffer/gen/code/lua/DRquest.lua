-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Table

local flatbuffers = require('flatbuffers')

local DRquest = {} -- the module
local DRquest_mt = {} -- the class metatable

function DRquest.New()
    local o = {}
    setmetatable(o, {__index = DRquest_mt})
    return o
end
function DRquest.GetRootAsDRquest(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = DRquest.New()
    o:Init(buf, n + offset)
    return o
end
function DRquest_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function DRquest_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Plot(j)
    local o = self.view:Offset(6)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Int32, a + ((j-1) * 4))
    end
    return 0
end
function DRquest_mt:PlotLength()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function DRquest_mt:Series()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Title()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:Description()
    local o = self.view:Offset(12)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:Name()
    local o = self.view:Offset(14)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:Gotype()
    local o = self.view:Offset(16)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Go(j)
    local o = self.view:Offset(18)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Int32, a + ((j-1) * 4))
    end
    return 0
end
function DRquest_mt:GoLength()
    local o = self.view:Offset(18)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function DRquest_mt:Gotype2()
    local o = self.view:Offset(20)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Go2()
    local o = self.view:Offset(22)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Gobuild2()
    local o = self.view:Offset(24)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:InteractiveButton()
    local o = self.view:Offset(26)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:TipsType()
    local o = self.view:Offset(28)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Remind(j)
    local o = self.view:Offset(30)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Float32, a + ((j-1) * 4))
    end
    return 0
end
function DRquest_mt:RemindLength()
    local o = self.view:Offset(30)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function DRquest_mt:ListId()
    local o = self.view:Offset(32)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Type2()
    local o = self.view:Offset(34)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Para1()
    local o = self.view:Offset(36)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:Para2()
    local o = self.view:Offset(38)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:IsChapter()
    local o = self.view:Offset(40)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Pic()
    local o = self.view:Offset(42)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:PreId()
    local o = self.view:Offset(44)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:Auto()
    local o = self.view:Offset(46)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Progress()
    local o = self.view:Offset(48)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Gobuild()
    local o = self.view:Offset(50)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:RewardStory()
    local o = self.view:Offset(52)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:GuideFreedom()
    local o = self.view:Offset(54)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:ClickStory()
    local o = self.view:Offset(56)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:TipsMovie()
    local o = self.view:Offset(58)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:TipsSoilId()
    local o = self.view:Offset(60)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:FinishStory()
    local o = self.view:Offset(62)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Para3()
    local o = self.view:Offset(64)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:RemindAuto()
    local o = self.view:Offset(66)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Accept2()
    local o = self.view:Offset(68)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:IsAchievement()
    local o = self.view:Offset(70)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:FinishId()
    local o = self.view:Offset(72)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Priority()
    local o = self.view:Offset(74)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:MainQuest()
    local o = self.view:Offset(76)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Par3()
    local o = self.view:Offset(78)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:Processing()
    local o = self.view:Offset(80)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:DailySeries()
    local o = self.view:Offset(82)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:DebugDot()
    local o = self.view:Offset(84)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:MainTime()
    local o = self.view:Offset(86)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:MainTime2()
    local o = self.view:Offset(88)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRquest_mt:BookClose()
    local o = self.view:Offset(90)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest_mt:EventDailyunlockChest()
    local o = self.view:Offset(92)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRquest.Start(builder) builder:StartObject(45) end
function DRquest.AddId(builder, id) builder:PrependInt32Slot(0, id, 0) end
function DRquest.AddPlot(builder, Plot) builder:PrependUOffsetTRelativeSlot(1, Plot, 0) end
function DRquest.StartPlotVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function DRquest.AddSeries(builder, series) builder:PrependInt32Slot(2, series, 0) end
function DRquest.AddTitle(builder, title) builder:PrependUOffsetTRelativeSlot(3, title, 0) end
function DRquest.AddDescription(builder, description) builder:PrependUOffsetTRelativeSlot(4, description, 0) end
function DRquest.AddName(builder, name) builder:PrependUOffsetTRelativeSlot(5, name, 0) end
function DRquest.AddGotype(builder, gotype) builder:PrependInt32Slot(6, gotype, 0) end
function DRquest.AddGo(builder, go) builder:PrependUOffsetTRelativeSlot(7, go, 0) end
function DRquest.StartGoVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function DRquest.AddGotype2(builder, gotype2) builder:PrependInt32Slot(8, gotype2, 0) end
function DRquest.AddGo2(builder, go2) builder:PrependInt32Slot(9, go2, 0) end
function DRquest.AddGobuild2(builder, gobuild2) builder:PrependInt32Slot(10, gobuild2, 0) end
function DRquest.AddInteractiveButton(builder, interactiveButton) builder:PrependInt32Slot(11, interactiveButton, 0) end
function DRquest.AddTipsType(builder, TipsType) builder:PrependInt32Slot(12, TipsType, 0) end
function DRquest.AddRemind(builder, remind) builder:PrependUOffsetTRelativeSlot(13, remind, 0) end
function DRquest.StartRemindVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function DRquest.AddListId(builder, ListId) builder:PrependInt32Slot(14, ListId, 0) end
function DRquest.AddType2(builder, type2) builder:PrependInt32Slot(15, type2, 0) end
function DRquest.AddPara1(builder, para1) builder:PrependUOffsetTRelativeSlot(16, para1, 0) end
function DRquest.AddPara2(builder, para2) builder:PrependUOffsetTRelativeSlot(17, para2, 0) end
function DRquest.AddIsChapter(builder, isChapter) builder:PrependInt32Slot(18, isChapter, 0) end
function DRquest.AddPic(builder, pic) builder:PrependUOffsetTRelativeSlot(19, pic, 0) end
function DRquest.AddPreId(builder, preId) builder:PrependUOffsetTRelativeSlot(20, preId, 0) end
function DRquest.AddAuto(builder, auto) builder:PrependInt32Slot(21, auto, 0) end
function DRquest.AddProgress(builder, progress) builder:PrependInt32Slot(22, progress, 0) end
function DRquest.AddGobuild(builder, gobuild) builder:PrependInt32Slot(23, gobuild, 0) end
function DRquest.AddRewardStory(builder, rewardStory) builder:PrependInt32Slot(24, rewardStory, 0) end
function DRquest.AddGuideFreedom(builder, guideFreedom) builder:PrependInt32Slot(25, guideFreedom, 0) end
function DRquest.AddClickStory(builder, clickStory) builder:PrependInt32Slot(26, clickStory, 0) end
function DRquest.AddTipsMovie(builder, TipsMovie) builder:PrependInt32Slot(27, TipsMovie, 0) end
function DRquest.AddTipsSoilId(builder, TipsSoilId) builder:PrependInt32Slot(28, TipsSoilId, 0) end
function DRquest.AddFinishStory(builder, finishStory) builder:PrependInt32Slot(29, finishStory, 0) end
function DRquest.AddPara3(builder, para3) builder:PrependUOffsetTRelativeSlot(30, para3, 0) end
function DRquest.AddRemindAuto(builder, remindAuto) builder:PrependInt32Slot(31, remindAuto, 0) end
function DRquest.AddAccept2(builder, accept2) builder:PrependInt32Slot(32, accept2, 0) end
function DRquest.AddIsAchievement(builder, isAchievement) builder:PrependInt32Slot(33, isAchievement, 0) end
function DRquest.AddFinishId(builder, FinishId) builder:PrependInt32Slot(34, FinishId, 0) end
function DRquest.AddPriority(builder, priority) builder:PrependInt32Slot(35, priority, 0) end
function DRquest.AddMainQuest(builder, mainQuest) builder:PrependInt32Slot(36, mainQuest, 0) end
function DRquest.AddPar3(builder, par3) builder:PrependInt32Slot(37, par3, 0) end
function DRquest.AddProcessing(builder, processing) builder:PrependInt32Slot(38, processing, 0) end
function DRquest.AddDailySeries(builder, dailySeries) builder:PrependInt32Slot(39, dailySeries, 0) end
function DRquest.AddDebugDot(builder, DebugDot) builder:PrependInt32Slot(40, DebugDot, 0) end
function DRquest.AddMainTime(builder, MainTime) builder:PrependUOffsetTRelativeSlot(41, MainTime, 0) end
function DRquest.AddMainTime2(builder, MainTime2) builder:PrependUOffsetTRelativeSlot(42, MainTime2, 0) end
function DRquest.AddBookClose(builder, bookClose) builder:PrependInt32Slot(43, bookClose, 0) end
function DRquest.AddEventDailyunlockChest(builder, eventDailyunlockChest) builder:PrependInt32Slot(44, eventDailyunlockChest, 0) end
function DRquest.End(builder) return builder:EndObject() end

return DRquest -- return the module