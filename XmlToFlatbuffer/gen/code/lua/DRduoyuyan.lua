-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Table

local flatbuffers = require('flatbuffers')

local DRduoyuyan = {} -- the module
local DRduoyuyan_mt = {} -- the class metatable

function DRduoyuyan.New()
    local o = {}
    setmetatable(o, {__index = DRduoyuyan_mt})
    return o
end
function DRduoyuyan.GetRootAsDRduoyuyan(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = DRduoyuyan.New()
    o:Init(buf, n + offset)
    return o
end
function DRduoyuyan_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function DRduoyuyan_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRduoyuyan_mt:Language()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DRduoyuyan_mt:LockAlies()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function DRduoyuyan.Start(builder) builder:StartObject(3) end
function DRduoyuyan.AddId(builder, id) builder:PrependInt32Slot(0, id, 0) end
function DRduoyuyan.AddLanguage(builder, language) builder:PrependUOffsetTRelativeSlot(1, language, 0) end
function DRduoyuyan.AddLockAlies(builder, lockAlies) builder:PrependInt32Slot(2, lockAlies, 0) end
function DRduoyuyan.End(builder) return builder:EndObject() end

return DRduoyuyan -- return the module